{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction Jsql是一种基于SQL语法规则的Json数据读取工具。由 梦因想而伟大 于2022年1月22日编写并编译了第一个版本。软件可执行文件名为jsqld.exe，核心基于控制台。 通过Jsql，你可以方便的对Json中的各种数据进行条件查询或无条件查询，而无需进行程序中繁琐的Json处理代码块的操作。 "},"chapter1/readme.html":{"url":"chapter1/readme.html","title":"概述","keywords":"","body":"使用规则 JSQL需要特定格式的语句输入以实现用户指定的功能。 "},"chapter1/open.html":{"url":"chapter1/open.html","title":"打开Json文档","keywords":"","body":"打开Json文档 在你使用Jsql对Json文件进行操作前，需要先打开指定的Json文档，命令如下 open \"{jsonpath}\" -charset 在这个语句中，{jsonpath}代表你的Json文件在你电脑硬盘上的位置，如C:\\example.json，而charset代表json文件的编码类型，目前支持两种编码 UTF8 GB2312 在Jsql终端输入以上命令，若无报错信息，则代表Json文件已经成功打开 "},"chapter1/close.html":{"url":"chapter1/close.html","title":"关闭Json文档","keywords":"","body":"关闭Json文档 在使用完毕Json文档后，可以关闭Json文档以释放电脑内存，具体命令如下 close "},"chapter1/query.html":{"url":"chapter1/query.html","title":"条件查询","keywords":"","body":"条件查询 可以通过Jsql查询Json中符合特定条件的数据，具体命令如下 select('field1','field2','field3')WHERE 'ROOTPATH'WHOSE{cmpfield1}='cmpvalue1'{cmpfield2}='cmpvalue2' 格式必须符合上述标准，除了在WHERE后面有一个空格外，在语句除了文本以外的任何地方都不应再出现空格符号 select后面小括号()中的field1,field2,field3代表你要读取的字段名称，这个名称基于WHERE后ROOTPATH，例如ROOTPATH为data.myxewd，那么查询的数据就为Json表示法data.myxewd.field1,data.myxewd.field2,data.myxewd.field3取出的数据。所需要查询的字段个数在区间[1,+∞)范围内，即可通过(‘field1','field2','field3',...,'fieldn')表示。 ROOTPATH代表需要查询的数据在Json文档中的上级节点路径，例如在JSON { \"name\": \"测试Json\", \"field\": [ { \"location\": \"中国\", \"name\": \"泰山\", \"special\":\"spec\" }, { \"location\": \"俄罗斯\", \"name\": \"贝加尔湖\" }, { \"location\": \"美国\", \"name\": \"夏威夷岛\" }, { \"location\": \"中国\", \"name\": \"峨眉山\" }, { \"location\": \"澳大利亚\", \"name\": \"大沙漠\" } ] } 要查询field数组中location值为”中国“且name值为”泰山“的对象的special值，ROOTPATH就应为field[1]，是包含数据的对象。当然，这里的ROOTPATH支持一些特殊规则。例如以上JSON，在包含数组的情况下，ROOTPATH可以为field[{n}]，在这里{n}代表遍历整个数组所含对象，支持多层嵌套规则，如a[{n}].b.c[{n}].d.[1].[{n}]，Jsql会自动识别并转换。 在WHOSE后面，就是所需读取数据的条件。当然你也可以去掉整个WHOSE子语句，那么Jsql返回的就是所有ROOTPATH下指定的字段数据。 {cmpfield}代表条件数据所在的字段名，在实际的Jsql语句中是不包含大括号的。当Jsql读取到ROOTPATH.cmpfield的值与cmpvalue的值相同时，即认为现行对象是符合筛选条件，会将现行结果加入到返回的数据中。Jsql支持多个cmpfield存在，每个条件格式为{cmpfield}='cmpvalue'，多个条件之间不需要任何分隔符。 "},"chapter2/readme.html":{"url":"chapter2/readme.html","title":"查询示例","keywords":"","body":"快速入门 例如在示例Json中，你要查找field数组中所有location值为”中国“的对象中的name值，那么Json语句就应该为 select('name')WHERE 'field[{n}]'WHOSElocation='中国' Jsql会给出如下返回 { \"data\": [{ \"name\": [\"泰山\"] }, { \"name\": [\"峨眉山\"] }] } 要特别注意的是，Jsql遵循严格大小写规则，符号必须为半角符号且字母的大小写情况必须和Json中的字段名称符合。 祝您使用Jsql愉快 "},"chapter2/release.html":{"url":"chapter2/release.html","title":"Release","keywords":"","body":"历史版本下载 Beta版本 （v1.0） 更新时间：2022-1-22 https://wwu.lanzout.com/ixdSgzc8vta 密码:2p82 "}}